{"version":3,"sources":["../node_modules/typescript/lib sync","components/Header.jsx","components/Footer.jsx","components/Note.jsx","components/CreateArea.jsx","components/App.jsx","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Heading","Footer","currentYear","Date","getFullYear","Note","props","className","title","content","onClick","onDelete","CreateArea","useState","isExpanded","setExpanded","note","setNote","handleChange","event","target","name","value","prevNote","placeholder","onChange","rows","Zoom","in","Fab","onAdd","preventDefault","App","notes","setNotes","deleteNote","prevNotes","filter","noteItem","index","Header","map","key","ReactDOM","render","document","getElementById"],"mappings":"mdAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,K,gHCKVC,MAVf,WACE,OACE,gCACE,4BACE,kBAAC,IAAD,MADF,aCKSC,MATf,WACE,IAAMC,GAAc,IAAIC,MAAOC,cAC/B,OACE,gCACE,6CAAgBF,K,kBCePG,MAhBf,SAAcC,GAKZ,OACE,yBAAKC,UAAU,QACb,4BAAKD,EAAME,OACX,2BAAIF,EAAMG,SACV,4BAAQC,QARZ,WACEJ,EAAMK,SAASL,EAAMP,MAQjB,kBAAC,IAAD,S,4DC+DOa,MAxEf,SAAoBN,GAElB,MAAkCO,oBAAS,GAA3C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEA,EAAwBF,mBAAS,CAC/BL,MAAO,GACPC,QAAS,KAFX,mBAAOO,EAAP,KAAaC,EAAb,KASA,SAASC,EAAaC,GACpB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdL,GAAQ,SAACM,GACP,OAAO,2BACFA,GADL,kBAEGF,EAAOC,OAyBd,OACE,6BACE,0BAAMf,UAAU,eACbO,GACC,2BACEO,KAAK,QACLG,YAAY,QACZF,MAAON,EAAKR,MACZiB,SAAUP,IAGd,8BACER,QAhBR,WACEK,GAAY,IAgBNM,KAAK,UACLG,YAAY,iBACZE,KAAMZ,EAAa,EAAI,EACvBQ,MAAON,EAAKP,QACZgB,SAAUP,IAEZ,kBAACS,EAAA,EAAD,CAAMC,GAAId,GACR,kBAACe,EAAA,EAAD,CAAKnB,QAnCb,SAAoBS,GAClBb,EAAMwB,MAAMd,GACZC,EAAQ,CACNT,MAAO,GACPC,QAAS,KAEXU,EAAMY,mBA8BE,kBAAC,IAAD,WCbGC,MAlDf,WAEE,MAA0BnB,mBAAS,IAAnC,mBAAOoB,EAAP,KAAcC,EAAd,KAkBA,SAASC,EAAWpC,GAClBmC,GAAS,SAACE,GACR,OAAOA,EAAUC,QAAO,SAACC,EAAUC,GACjC,OAAOA,IAAUxC,QAOvB,OACE,6BACE,kBAACyC,EAAD,MACA,kBAAC,EAAD,CAAYV,MAxBhB,SAAiBd,GACfkB,GAAS,SAACE,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAsBpB,UAuBrBiB,EAAMQ,KAAI,SAACH,EAAUC,GACpB,OACE,kBAAC,EAAD,CACEG,IAAKH,EACLxC,GAAIwC,EACJ/B,MAAO8B,EAAS9B,MAChBC,QAAS6B,EAAS7B,QAClBE,SAAUwB,OAIhB,kBAAC,EAAD,QC/CNQ,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.0b29c60e.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 261;","import React from \"react\";\r\nimport HighlightIcon from \"@material-ui/icons/Highlight\";\r\n\r\nfunction Heading() {\r\n  return (\r\n    <header>\r\n      <h1>\r\n        <HighlightIcon /> Keeper\r\n      </h1>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Heading;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  const currentYear = new Date().getFullYear();\r\n  return (\r\n    <footer>\r\n      <p>Copyright Â© {currentYear}</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\n//This function handles the onDelete function defined in the App.jsx when the Delete button gets clicked\r\n//Passes in the props.id that is based on the index set in the map function in App.jsx\r\nfunction Note(props) {\r\n  function handleClick() {\r\n    props.onDelete(props.id);\r\n  }\r\n\r\n  return (\r\n    <div className=\"note\">\r\n      <h1>{props.title}</h1>\r\n      <p>{props.content}</p>\r\n      <button onClick={handleClick}>\r\n        <DeleteIcon />\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Note;\r\n","import React, { useState } from \"react\";\r\nimport { isPropertySignature } from \"typescript\";\r\nimport NoteAddIcon from \"@material-ui/icons/NoteAdd\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\n\r\nfunction CreateArea(props) {\r\n  //Creating a state for the expanded state of the input fields\r\n  const [isExpanded, setExpanded] = useState(false);\r\n  //Create a React state that keeps track of the title and content entered through the forms below\r\n  const [note, setNote] = useState({\r\n    title: \"\",\r\n    content: \"\",\r\n  });\r\n\r\n  //Define the function that gets executed when the user changes one of the inputs\r\n  // Destructure the event into name and value variables'\r\n  //Update the state to store the values in the note-state described above\r\n  //setBNote updates the note state with all previous notes and the new value entered for the [name] object\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    setNote((prevNote) => {\r\n      return {\r\n        ...prevNote,\r\n        [name]: value,\r\n      };\r\n    });\r\n  }\r\n\r\n  //Defines the function that gets executed when the Add button is clicked\r\n  //The function should pass the note state over to the App.js\r\n  //Because were dealing with a form, we prevent the default reload event when hitting the Add button by the preventDefault()\r\n  //Calling the props.onAdd is equivalent to the function addNote in the App.jsx!\r\n  //This passes over the const note to the App.jsx\r\n  function submitNote(event) {\r\n    props.onAdd(note);\r\n    setNote({\r\n      title: \"\",\r\n      content: \"\",\r\n    });\r\n    event.preventDefault();\r\n  }\r\n\r\n  //Defines the function that gets called when the input of the title is clicked\r\n  //updates the expended state to true\r\n  function expand() {\r\n    setExpanded(true);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"create-note\">\r\n        {isExpanded && (\r\n          <input\r\n            name=\"title\"\r\n            placeholder=\"Title\"\r\n            value={note.title}\r\n            onChange={handleChange}\r\n          />\r\n        )}\r\n        <textarea\r\n          onClick={expand}\r\n          name=\"content\"\r\n          placeholder=\"Take a note...\"\r\n          rows={isExpanded ? 3 : 1}\r\n          value={note.content}\r\n          onChange={handleChange}\r\n        />\r\n        <Zoom in={isExpanded}>\r\n          <Fab onClick={submitNote}>\r\n            <NoteAddIcon />\r\n          </Fab>\r\n        </Zoom>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateArea;\r\n","import React, { useState } from \"react\";\r\nimport Header from \"./Header.jsx\";\r\nimport Footer from \"./Footer.jsx\";\r\nimport Note from \"./Note.jsx\";\r\nimport CreateArea from \"./CreateArea.jsx\";\r\nimport { createNotEmittedStatement } from \"typescript\";\r\n\r\nfunction App() {\r\n  //Defines the state for the notes array that collects all notes from the inputs\r\n  const [notes, setNotes] = useState([]);\r\n\r\n  //The addNote function links via props to the submitNote function in the CreateArea component\r\n  //Gets passed in the note object from there\r\n  //Want to pass in the note object into the notes array defined above\r\n  //For that, use setNotes() with all previous values of notes and the new note\r\n  //Using the spread operator to add all previous notes and then the new one\r\n  function addNote(note) {\r\n    setNotes((prevNotes) => {\r\n      return [...prevNotes, note];\r\n    });\r\n  }\r\n\r\n  //Defines the delete function based on an item id.\r\n  //We update the notes array with setNotes with all previous notes\r\n  //We then loop through all previous notes using a filter function that takes every noteItem and it's index into consideration\r\n  // We only return the noteItems which index does not equal the id\r\n  //This basically deletes the id\r\n  function deleteNote(id) {\r\n    setNotes((prevNotes) => {\r\n      return prevNotes.filter((noteItem, index) => {\r\n        return index !== id;\r\n      });\r\n    });\r\n  }\r\n\r\n  //The index is a part of the map or filter functions and gets assigned automatically\r\n  // You can use the index to uniquely identify an item in an array\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <CreateArea onAdd={addNote} />\r\n      {notes.map((noteItem, index) => {\r\n        return (\r\n          <Note\r\n            key={index}\r\n            id={index}\r\n            title={noteItem.title}\r\n            content={noteItem.content}\r\n            onDelete={deleteNote}\r\n          />\r\n        );\r\n      })}\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App.jsx\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n//CHALLENGE:\n//1. Implement the add note functionality.\n//- Create a constant that keeps track of the title and content.\n//- Pass the new note back to the App.\n//- Add new note to an array.\n//- Take array and render seperate Note components for each item.\n\n//2. Implement the delete note functionality.\n//- Callback from the Note component to trigger a delete function.\n//- Use the filter function to filter out the item that needs deletion.\n//- Pass a id over to the Note component, pass it back to the App when deleting.\n\n//This is the end result you're aiming for:\n//https://pogqj.csb.app/\n"],"sourceRoot":""}